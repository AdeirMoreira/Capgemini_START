/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ToDoProject.view;

import ToDoProject.controller.ProjectController;
import ToDoProject.controller.TaskController;
import ToDoProject.model.Project;
import ToDoProject.model.Task;
import ToDoProject.util.ButtonColumnCellRederer;
import ToDoProject.util.DeadlineConlumnCellRenderer;
import ToDoProject.util.TaskTableModel;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Adeir
 */
public class MainScreen extends javax.swing.JFrame {

    ProjectController projectcontroller;
    TaskController taskcontroller;

    DefaultListModel projectsModel;
    TaskTableModel taskModel;

    public MainScreen() {
        initComponents();
        
        initDataController();
        initComponentsModel();
        decorateTableTask();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TasksEmptyPanel = new javax.swing.JPanel();
        EmptyTaskIcon = new javax.swing.JLabel();
        EmptyTaskMessage = new javax.swing.JLabel();
        addTaskMessage = new javax.swing.JLabel();
        Title_BarPanel = new javax.swing.JPanel();
        Title = new javax.swing.JLabel();
        Subtitle = new javax.swing.JLabel();
        Projects_Panel = new javax.swing.JPanel();
        Projects = new javax.swing.JLabel();
        addProjectIcon = new javax.swing.JLabel();
        Tasks_Panel = new javax.swing.JPanel();
        Tasks = new javax.swing.JLabel();
        addTaskIcon = new javax.swing.JLabel();
        ProjectsListPanel = new javax.swing.JPanel();
        ProjectsListScrollPanel = new javax.swing.JScrollPane();
        ProjectListJList = new javax.swing.JList<>();
        TasksDetail = new javax.swing.JPanel();
        TableTaskScrollPanel = new javax.swing.JScrollPane();
        TaskTable = new javax.swing.JTable();

        TasksEmptyPanel.setBackground(java.awt.Color.white);

        EmptyTaskIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmptyTaskIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/verified.png"))); // NOI18N

        EmptyTaskMessage.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        EmptyTaskMessage.setForeground(new java.awt.Color(0, 152, 102));
        EmptyTaskMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        EmptyTaskMessage.setText("Nenhuma tarefa por aqui :D");

        addTaskMessage.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        addTaskMessage.setForeground(new java.awt.Color(153, 153, 153));
        addTaskMessage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addTaskMessage.setText("Clique no botão + para adicionar uma tarefa.");

        javax.swing.GroupLayout TasksEmptyPanelLayout = new javax.swing.GroupLayout(TasksEmptyPanel);
        TasksEmptyPanel.setLayout(TasksEmptyPanelLayout);
        TasksEmptyPanelLayout.setHorizontalGroup(
            TasksEmptyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TasksEmptyPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TasksEmptyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTaskMessage, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                    .addComponent(EmptyTaskMessage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(EmptyTaskIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        TasksEmptyPanelLayout.setVerticalGroup(
            TasksEmptyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TasksEmptyPanelLayout.createSequentialGroup()
                .addGap(118, 118, 118)
                .addComponent(EmptyTaskIcon)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(EmptyTaskMessage)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addTaskMessage)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(600, 800));

        Title_BarPanel.setBackground(new java.awt.Color(0, 153, 102));

        Title.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        Title.setForeground(new java.awt.Color(255, 255, 255));
        Title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/checklist.png"))); // NOI18N
        Title.setText("ToDo APP");

        Subtitle.setBackground(new java.awt.Color(255, 255, 255));
        Subtitle.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Subtitle.setForeground(new java.awt.Color(255, 255, 255));
        Subtitle.setText("Anote tudo, não esqueça nada.");

        javax.swing.GroupLayout Title_BarPanelLayout = new javax.swing.GroupLayout(Title_BarPanel);
        Title_BarPanel.setLayout(Title_BarPanelLayout);
        Title_BarPanelLayout.setHorizontalGroup(
            Title_BarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Title_BarPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Title_BarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Subtitle, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Title, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        Title_BarPanelLayout.setVerticalGroup(
            Title_BarPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Title_BarPanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(Title)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Subtitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Projects_Panel.setBackground(java.awt.Color.white);
        Projects_Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Projects.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Projects.setForeground(new java.awt.Color(0, 152, 102));
        Projects.setText("Projetos");

        addProjectIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        addProjectIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addProjectIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Projects_PanelLayout = new javax.swing.GroupLayout(Projects_Panel);
        Projects_Panel.setLayout(Projects_PanelLayout);
        Projects_PanelLayout.setHorizontalGroup(
            Projects_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Projects_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Projects)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addProjectIcon)
                .addContainerGap())
        );
        Projects_PanelLayout.setVerticalGroup(
            Projects_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Projects_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Projects_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addProjectIcon)
                    .addComponent(Projects))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        Tasks_Panel.setBackground(java.awt.Color.white);
        Tasks_Panel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        Tasks.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        Tasks.setForeground(new java.awt.Color(0, 152, 102));
        Tasks.setText("Tarefas");

        addTaskIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/plus.png"))); // NOI18N
        addTaskIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addTaskIconMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout Tasks_PanelLayout = new javax.swing.GroupLayout(Tasks_Panel);
        Tasks_Panel.setLayout(Tasks_PanelLayout);
        Tasks_PanelLayout.setHorizontalGroup(
            Tasks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tasks_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Tasks)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addTaskIcon)
                .addContainerGap())
        );
        Tasks_PanelLayout.setVerticalGroup(
            Tasks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tasks_PanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Tasks_PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addTaskIcon)
                    .addComponent(Tasks))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ProjectsListPanel.setBackground(java.awt.Color.white);
        ProjectsListPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ProjectListJList.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        ProjectListJList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ProjectListJList.setFixedCellHeight(40);
        ProjectListJList.setSelectionBackground(new java.awt.Color(0, 152, 102));
        ProjectListJList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ProjectListJListMouseClicked(evt);
            }
        });
        ProjectsListScrollPanel.setViewportView(ProjectListJList);

        javax.swing.GroupLayout ProjectsListPanelLayout = new javax.swing.GroupLayout(ProjectsListPanel);
        ProjectsListPanel.setLayout(ProjectsListPanelLayout);
        ProjectsListPanelLayout.setHorizontalGroup(
            ProjectsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectsListScrollPanel)
                .addContainerGap())
        );
        ProjectsListPanelLayout.setVerticalGroup(
            ProjectsListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProjectsListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ProjectsListScrollPanel)
                .addContainerGap())
        );

        TasksDetail.setBackground(java.awt.Color.white);
        TasksDetail.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        TasksDetail.setLayout(new java.awt.BorderLayout());

        TaskTable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TaskTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nome", "Descrição", "Prazo", "Tarefa Concluída"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TaskTable.setRowHeight(30);
        TaskTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        TaskTable.setShowHorizontalLines(true);
        TaskTable.setShowVerticalLines(true);
        TaskTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TaskTableMouseClicked(evt);
            }
        });
        TableTaskScrollPanel.setViewportView(TaskTable);

        TasksDetail.add(TableTaskScrollPanel, java.awt.BorderLayout.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Title_BarPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ProjectsListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Projects_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tasks_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(TasksDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(Title_BarPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(Tasks_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Projects_Panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(TasksDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ProjectsListPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addProjectIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addProjectIconMouseClicked
        ProjectDialogScreen projectDialogScreen = new ProjectDialogScreen(this, rootPaneCheckingEnabled);
        projectDialogScreen.setVisible(true);
        
        projectDialogScreen.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e){
                loadProjects();
            }
        });
    }//GEN-LAST:event_addProjectIconMouseClicked

    private void addTaskIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addTaskIconMouseClicked
        // TODO add your handling code here:
        TaskDialogScreen taskDialog = new TaskDialogScreen(this, rootPaneCheckingEnabled);
        int projectIndex = ProjectListJList.getSelectedIndex();
        Project project = (Project) projectsModel.get(projectIndex);
        taskDialog.setProject(project);
        taskDialog.setVisible(true);
        
        taskDialog.addWindowListener(new WindowAdapter(){
            public void windowClosed(WindowEvent e){
                int projectIndex = ProjectListJList.getSelectedIndex();
                Project project = (Project)projectsModel.get(projectIndex);
                loadTasks(project.getId());
            }
        });
    }//GEN-LAST:event_addTaskIconMouseClicked

    private void TaskTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TaskTableMouseClicked
        try {
            int rowIndex = TaskTable.rowAtPoint(evt.getPoint());
            int columnIndex = TaskTable.columnAtPoint(evt.getPoint());
            Task task = taskModel.getTasks().get(rowIndex);
            switch(columnIndex){
                case 3:
                    taskcontroller.update(task, task.getId());
                    break;
                case 4:
                    
                case 5:
                    taskcontroller.delete(task.getId());
                    taskModel.getTasks().remove(task);
                    int projectIndex = ProjectListJList.getSelectedIndex();
                    Project project = (Project)projectsModel.get(projectIndex);
                    loadTasks(project.getId());
                    break;
                default:
                    
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_TaskTableMouseClicked

    private void ProjectListJListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ProjectListJListMouseClicked
       int projectIndex = ProjectListJList.getSelectedIndex();
       Project project = (Project)projectsModel.get(projectIndex);
        loadTasks(project.getId());
    }//GEN-LAST:event_ProjectListJListMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Java swing".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainScreen.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainScreen().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel EmptyTaskIcon;
    private javax.swing.JLabel EmptyTaskMessage;
    private javax.swing.JList<String> ProjectListJList;
    private javax.swing.JLabel Projects;
    private javax.swing.JPanel ProjectsListPanel;
    private javax.swing.JScrollPane ProjectsListScrollPanel;
    private javax.swing.JPanel Projects_Panel;
    private javax.swing.JLabel Subtitle;
    private javax.swing.JScrollPane TableTaskScrollPanel;
    private javax.swing.JTable TaskTable;
    private javax.swing.JLabel Tasks;
    private javax.swing.JPanel TasksDetail;
    private javax.swing.JPanel TasksEmptyPanel;
    private javax.swing.JPanel Tasks_Panel;
    private javax.swing.JLabel Title;
    private javax.swing.JPanel Title_BarPanel;
    private javax.swing.JLabel addProjectIcon;
    private javax.swing.JLabel addTaskIcon;
    private javax.swing.JLabel addTaskMessage;
    // End of variables declaration//GEN-END:variables
    public void decorateTableTask() {
        TaskTable.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
        TaskTable.getTableHeader().setBackground(new Color(0, 152, 102));
        TaskTable.getTableHeader().setForeground(new Color(255, 255, 255));
        TaskTable.setAutoCreateRowSorter(true);
        TaskTable.getColumnModel().getColumn(2).
                setCellRenderer(new DeadlineConlumnCellRenderer());
        TaskTable.getColumnModel().getColumn(4).
                setCellRenderer(new ButtonColumnCellRederer("edit"));
        TaskTable.getColumnModel().getColumn(5).
                setCellRenderer(new ButtonColumnCellRederer("delete"));
    }

    public void initDataController() {
        projectcontroller = new ProjectController();
        taskcontroller = new TaskController();
    }

    public void initComponentsModel() {
        projectsModel = new DefaultListModel();
        loadProjects();
        
        taskModel = new TaskTableModel();
        TaskTable.setModel(taskModel);
        loadTasks(7);
        
        if(!projectsModel.isEmpty()){
            ProjectListJList.setSelectedIndex(0);
            Project project = (Project)projectsModel.get(0);
            loadTasks(project.getId());
        }
    }

    public void loadProjects() {
        List<Project> projects;
        projectsModel.clear();
        try {
            projects = projectcontroller.getAll();
            for(int i = 0; i< projects.size(); i++){
                Project project = projects.get(i);
                projectsModel.addElement(project);
            }
            ProjectListJList.setModel(projectsModel);           
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }
    public void loadTasks(int idProject) {
        List<Task> tasks;
        try {
            tasks = taskcontroller.getAll(idProject);
            taskModel.setTasks(tasks);
            
            showTableTask(!tasks.isEmpty());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage());
        }
        
    }
    
    private void showTableTask(boolean hasTasks){
        if(hasTasks){
            if(TasksEmptyPanel.isVisible()){
                TasksEmptyPanel.setVisible(false);
                TasksDetail.remove(TasksEmptyPanel);
            }
            TasksDetail.add(TableTaskScrollPanel);
            TableTaskScrollPanel.setVisible(true);
            TableTaskScrollPanel.setSize(TasksDetail.getWidth(),TasksDetail.getHeight());
        }else{
            if(TableTaskScrollPanel.isVisible()){
                TableTaskScrollPanel.setVisible(false);
                TasksDetail.remove(TableTaskScrollPanel);
            }
            TasksDetail.add(TasksEmptyPanel);
            TasksEmptyPanel.setVisible(true);
            TasksEmptyPanel.setSize(TasksDetail.getWidth(),TasksDetail.getHeight());
        } 
    }
}
